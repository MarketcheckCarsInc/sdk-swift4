//
// VINDecoderAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class VINDecoderAPI {
    /**
     VIN Decoder
     
     - parameter vin: (path) VIN to decode 
     - parameter apiKey: (query) The API Authentication Key. Mandatory with all API calls. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func decode(vin: String, apiKey: String? = nil, completion: @escaping ((_ data: Build?,_ error: Error?) -> Void)) {
        decodeWithRequestBuilder(vin: vin, apiKey: apiKey).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     VIN Decoder
     - GET /vin/{vin}/specs
     - Get the basic information on specifications for a car identified by a valid VIN
     - examples: [{contentType=application/json, example={
  "std_seating" : "std_seating",
  "year" : 2.027123023002321833274663731572218239307403564453125,
  "engine_aspiration" : "engine_aspiration",
  "city_miles" : "city_miles",
  "steering_type" : "steering_type",
  "overall_height" : "overall_height",
  "engine_block" : "engine_block",
  "transmission" : "transmission",
  "trim" : "trim",
  "engine" : "engine",
  "antibrake_sys" : "antibrake_sys",
  "body_type" : "body_type",
  "model" : "model",
  "fuel_type" : "fuel_type",
  "make" : "make",
  "overall_width" : "overall_width",
  "vehicle_type" : "vehicle_type",
  "drivetrain" : "drivetrain",
  "cylinders" : 7.3862819483858839220147274318151175975799560546875,
  "doors" : 4.1456080298839363962315474054776132106781005859375,
  "made_in" : "made_in",
  "overall_length" : "overall_length",
  "engine_size" : "engine_size",
  "engine_measure" : "engine_measure",
  "tank_size" : "tank_size",
  "highway_miles" : "highway_miles"
}}]
     
     - parameter vin: (path) VIN to decode 
     - parameter apiKey: (query) The API Authentication Key. Mandatory with all API calls. (optional)

     - returns: RequestBuilder<Build> 
     */
    open class func decodeWithRequestBuilder(vin: String, apiKey: String? = nil) -> RequestBuilder<Build> {
        var path = "/vin/{vin}/specs"
        let vinPreEscape = "\(vin)"
        let vinPostEscape = vinPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{vin}", with: vinPostEscape, options: .literal, range: nil)
        let URLString = MarketcheckCarsApiAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "api_key": apiKey
        ])
        

        let requestBuilder: RequestBuilder<Build>.Type = MarketcheckCarsApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get Economy based on environmental factors
     
     - parameter vin: (query) VIN as a reference to the type of car for which Environmental Economy data is to be returned 
     - parameter apiKey: (query) The API Authentication Key. Mandatory with all API calls. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEconomy(vin: String, apiKey: String? = nil, completion: @escaping ((_ data: Economy?,_ error: Error?) -> Void)) {
        getEconomyWithRequestBuilder(vin: vin, apiKey: apiKey).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get Economy based on environmental factors
     - GET /economy
     - [MOCK] Calculate Economy i.e. Environmental Friendliness
     - examples: [{contentType=application/json, example={
  "smog_indicator" : "smog_indicator",
  "smog_rating" : 6.02745618307040320615897144307382404804229736328125,
  "ghg_emissions_indicator" : "ghg_emissions_indicator",
  "ghg_emissions_rating" : 0.80082819046101150206595775671303272247314453125
}}]
     
     - parameter vin: (query) VIN as a reference to the type of car for which Environmental Economy data is to be returned 
     - parameter apiKey: (query) The API Authentication Key. Mandatory with all API calls. (optional)

     - returns: RequestBuilder<Economy> 
     */
    open class func getEconomyWithRequestBuilder(vin: String, apiKey: String? = nil) -> RequestBuilder<Economy> {
        let path = "/economy"
        let URLString = MarketcheckCarsApiAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "api_key": apiKey, 
            "vin": vin
        ])
        

        let requestBuilder: RequestBuilder<Economy>.Type = MarketcheckCarsApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get fuel effeciency
     
     - parameter vin: (query) VIN as a reference to the type of car for which fuel data is to be returned 
     - parameter apiKey: (query) The API Authentication Key. Mandatory with all API calls. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getEfficiency(vin: String, apiKey: String? = nil, completion: @escaping ((_ data: FuelEfficiency?,_ error: Error?) -> Void)) {
        getEfficiencyWithRequestBuilder(vin: vin, apiKey: apiKey).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get fuel effeciency
     - GET /fuel_efficiency
     - [MOCK] Calculate fuel efficiency from taxonomy db mileage values
     - examples: [{contentType=application/json, example={
  "monthly_fuel_expense" : 6.02745618307040320615897144307382404804229736328125,
  "city_mileage" : "city_mileage",
  "annual_miles" : 0.80082819046101150206595775671303272247314453125,
  "highway_mileage" : "highway_mileage",
  "combined_mileage" : "combined_mileage"
}}]
     
     - parameter vin: (query) VIN as a reference to the type of car for which fuel data is to be returned 
     - parameter apiKey: (query) The API Authentication Key. Mandatory with all API calls. (optional)

     - returns: RequestBuilder<FuelEfficiency> 
     */
    open class func getEfficiencyWithRequestBuilder(vin: String, apiKey: String? = nil) -> RequestBuilder<FuelEfficiency> {
        let path = "/fuel_efficiency"
        let URLString = MarketcheckCarsApiAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "api_key": apiKey, 
            "vin": vin
        ])
        

        let requestBuilder: RequestBuilder<FuelEfficiency>.Type = MarketcheckCarsApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get Safety Rating
     
     - parameter vin: (query) VIN to fetch the safety ratings 
     - parameter apiKey: (query) The API Authentication Key. Mandatory with all API calls. (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getSafetyRating(vin: String, apiKey: String? = nil, completion: @escaping ((_ data: SafetyRating?,_ error: Error?) -> Void)) {
        getSafetyRatingWithRequestBuilder(vin: vin, apiKey: apiKey).execute { (response, error) -> Void in
            completion(response?.body, error);
        }
    }


    /**
     Get Safety Rating
     - GET /safety
     - [MOCK] Get Safety ratings from third party sources
     - examples: [{contentType=application/json, example={
  "driver_front_rating" : 5.962133916683182377482808078639209270477294921875,
  "passenger_front_rating" : 5.63737665663332876420099637471139430999755859375,
  "overall_rating" : 0.80082819046101150206595775671303272247314453125,
  "roll_over_rating" : 6.02745618307040320615897144307382404804229736328125,
  "driver_side_rating" : 1.46581298050294517310021547018550336360931396484375
}}]
     
     - parameter vin: (query) VIN to fetch the safety ratings 
     - parameter apiKey: (query) The API Authentication Key. Mandatory with all API calls. (optional)

     - returns: RequestBuilder<SafetyRating> 
     */
    open class func getSafetyRatingWithRequestBuilder(vin: String, apiKey: String? = nil) -> RequestBuilder<SafetyRating> {
        let path = "/safety"
        let URLString = MarketcheckCarsApiAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = NSURLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems(values:[
            "api_key": apiKey, 
            "vin": vin
        ])
        

        let requestBuilder: RequestBuilder<SafetyRating>.Type = MarketcheckCarsApiAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
